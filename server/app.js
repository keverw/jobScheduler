var config = {};var running = false;var version = 0.1;var iniparser = require('iniparser');iniparser.parse('./config.ini', function(err,data){	if (err)	{		console.log('error reading config.ini');		console.log(err);	}	else	{		var hasError = false;		var port = data.port;				if (port === undefined)		{			console.log('You must define a port in the config.ini file.');			hasError = true;		}		else if (isNaN(port))		{			console.log('Port must be a number');			hasError = true;		}		else		{			config.port = port;		}				if (!hasError)		{			startServer();		}	}    });//save filesvar tasksFile = './data/tasks.json';//datavar tasks = {};var nextTasks = {};var pendingTasks = {};//main part of appvar fs = require('fs');loadSaveData = function(){	var returnValue = true;	if (fs.existsSync(tasksFile)) //load	{		var tasks = JSON.parse(fs.readFileSync(tasksFile, 'utf8'));	}	else //save blank file	{		if (!saveDataSync('tasks'))		{			returnValue = false;		}	}		console.log(returnValue);		return returnValue; //temp}saveData = function (what){	}saveDataSync = function (what){	if (what == 'tasks')	{		fs.writeFileSync(tasksFile, JSON.stringify(tasks), 'utf8');				if (fs.existsSync(tasksFile))		{			return true;		}		else		{			return false;		}	}}startServer = function(){	if (loadSaveData())	{		running = true;		//start task processer				//start taking API calls		console.log('Start taking API calls and processing tasks');	}	else	{		console.log('Error loading saved data.');	}}